#!/bin/bash

list_entries() {
    entries=()

    for file in "$boot_entry_directory"/*; do
        [[ -f "$file" ]] || continue

        filename=$(basename "$file")

        title=$(grep -m1 '^title ' "$file" | cut -d ' ' -f2-)
        version=$(grep -m1 '^version ' "$file" | cut -d ' ' -f2-)
        linux=$(grep -m1 '^linux ' "$file" | cut -d ' ' -f2-)
        sortkey=$(grep -m1 '^sort-key ' "$file" | cut -d ' ' -f2-)

        # ulozime ako: filename||sortkey||output
        entries+=("$filename||$sortkey||$title ($version, $linux)")
    done


    while [[ $# -gt 0 ]]; do
        case "$1" in
            "-f")
                # printf - kvoli rozdeleniu riadkov
                IFS=$'\n' entries=($(printf "%s\n" "${entries[@]}" | sort -t '|' -k1))
                shift 1
                ;;
            "-s")
                IFS=$'\n' entries=($(printf "%s\n" "${entries[@]}" | sort -t '|' -k2 -k1))
                shift 1
                ;;
            "-k")
                regex=""
                shift 1

                while [[ $# -gt 0 ]]; do
                    if [[ "$1" =~ ^- ]]; then
                        break
                    fi

                    regex+="$1 "    
                    shift
                done

                # odstrani poslednu medzeru
                regex="${regex% }"  

                for i in "${!entries[@]}"; do

                    entry="${entries[$i]}"

                    linux_part="${entry##*(}"        # odstráni všetko pred poslednou zátvorkou (
                    linux_part="${linux_part%%)}"    # odstráni všetko za poslednou zátvorkou )
                    linux="${linux_part##*, }"       # vezme len časť za čiarkou (linux)

                    if [[ ! "$linux" =~ $regex ]]; then
                        unset 'entries[i]'
                    fi 
                done
                ;;
            "-t")
                regex=""
                shift 1

                while [[ $# -gt 0 ]]; do
                    if [[ "$1" =~ ^- ]]; then
                        break
                    fi

                    regex+="$1 "    
                    shift
                done

                # odstrani poslednu medzeru
                regex="${regex% }"  

                for i in "${!entries[@]}"; do
                    
                    entry="${entries[$i]}"

                    # Odstráni prefix po treťom "||"
                    after_third="${entry#*||*||}"
                    # Odstráni zvyšok od zátvorky
                    title="${after_third%%(*}"
                    # odstrani medzeru na konci
                    title="${title% }" 

                    if [[ ! "$title" =~ $regex ]]; then
                        unset 'entries[i]'
                    fi 
                done
                ;;
            *)
                echo "Použitie: $1 {list}"
                exit 1
                ;;
        esac
    done

    for entry in "${entries[@]}"; do
        echo "${entry##*||}"
    done
}

remove_entries() {

    regex=""

    while [[ $# -gt 0 ]]; do
        regex+="$1 "    
        shift
    done

    # odstrani poslednu medzeru
    regex="${regex% }"  

    for file in "$boot_entry_directory"/*; do
        [[ -f "$file" ]] || continue

        title=$(grep -m1 '^title ' "$file" | cut -d ' ' -f2-)

        echo "vypis :OOOOOOOO"
        if [[ "$title" =~ $regex ]]; then
            echo "removing: $file"
            rm "$file"
        fi 
    done
}

duplicate_entry() {

    # Parsovanie posledných výskytov argumentov
    local kernel_path="" initramfs_path="" new_title=""
    local add_args="" remove_args=""
    local destination="" make_default_flag=0

    while [[ $# -gt 0 ]]; do
        #echo "cyklus stuck: $1"
        case "$1" in
            "-k")
                shift

                kernel_path=""

                while [[ $# -gt 0 ]]; do
                    if [[ "$1" =~ ^- ]]; then
                        break
                    fi
                    kernel_path+="$1 "    
                    shift
                done
                kernel_path="${kernel_path% }" 
                ;;
            "-i")
                shift
                initramfs_path="$1"
                shift
                ;;
            "-t")
                shift
                new_title=""
                echo "jes"
                while [[ $# -gt 0 ]]; do
                    if [[ "$1" =~ ^- ]]; then
                        break
                    fi
                    echo "pouzivam: $1"
                    new_title+="$1 "    
                    shift
                done
                new_title="${new_title% }" 
                ;;
            "-a")
                shift
                param="$1"

                # Only add to operations if not already added
                if ! [[ " ${added_params[*]} " =~ " ${param} " ]]; then
                    operations+=("add:${param}")
                    added_params+=("${param}")
                    shift
                fi
                ;;
            "-r")
                shift
                operations+=("remove:$1")
                shift
                ;;
            "-d")
                shift
                destination="$1"
                shift
                ;;
            "--make-default")
                shift
                make_default_flag=1
                ;;
            *)
                path=""

                # odchyt cesty
                while [[ $# -gt 0 ]]; do
                    if [[ "$1" =~ ^- ]]; then
                        break
                    fi
                    path+="$1 "    
                    shift
                done

                # odstrani poslednu medzeru
                path="${path% }" 
                ;;
        esac
    done

    local content
    content=$(<"$path")

    # Úprava obsahu
    [[ -n "$kernel_path" ]]     && content=$(echo "$content" | sed -E "s|^linux\s+.*|linux $kernel_path|")
    [[ -n "$initramfs_path" ]]  && content=$(echo "$content" | sed -E "s|^initrd\s+.*|initrd $initramfs_path|")
    [[ -n "$new_title" ]] && content=$(sed -E "s|^[[:space:]]*title[[:space:]]+.*|title $new_title|" <<< "$content")

    # -a & -r
    if grep -q "^options" <<< "$content"; then
        options_line=$(grep "^options" <<< "$content")
        content=$(grep -v "^options" <<< "$content")
    else
        options_line="options"
    fi

    # Process operations in order
    for op in "${operations[@]}"; do
        type="${op%%:*}"
        arg="${op#*:}"
        
        if [[ "$type" == "add" ]]; then
            if ! [[ "$options_line" =~ (^|\s)"$arg"($|\s) ]]; then
                options_line="$options_line $arg"
            fi
        elif [[ "$type" == "remove" ]]; then
            options_line=$(sed -E "s/\s*\b${arg}\b\s*/ /g" <<< "$options_line")
        fi
    done
    
    options_line=$(echo "$options_line" | sed -E 's/\s+/ /g')
    if [[ "$options_line" != "options" ]]; then
        content="$content"$'\n'"$options_line"
    fi

    # Nastavenie default
    if [[ "$make_default_flag" -eq 1 ]]; then
        make_default $path
    fi
    
    cleaned_content="$(echo "$content" | sed -E 's/[[:space:]]+$//' )"

    # Výstupný súbor
    if [[ -n "$destination" ]]; then
        echo "$cleaned_content" > "$destination"
        echo "$cleaned_content"
    else
        # Generuj unikátne meno
        base_name=$(basename "$path" .conf)
        for i in {1..999}; do
            try="$boot_entry_directory/${base_name}.copy${i}.conf"
            #try="$boot_entry_directory/${base_name}.copy.conf"
            if [[ ! -e "$try" ]]; then
                destination="$try"
                echo "$cleaned_content" > "$destination"
                break
            fi
        done
        if [[ -z "$destination" ]]; then
            echo "Error: Could not find unique filename for duplicated entry." >&2
            exit 1
        fi
    fi

    echo "Duplicated entry saved to '$destination'"
}

show_default() {
    local only_path=false

    # Odchytíme príznak -f
    if [[ "$1" == "-f" ]]; then
        only_path=true
    fi

    for file in "$boot_entry_directory"/*; do
        [[ -f "$file" ]] || continue
        if grep -q '^vutfit_default y' "$file"; then
            if $only_path; then
                echo "$file"
            else
                cat "$file"
            fi
            return 0
        fi
    done

    return 1  # ak nič nenájdeme, návratový kód != 0
}


make_default() {
    path=""

    while [[ $# -gt 0 ]]; do
        path+="$1 "    
        shift
    done

    path="${path% }" 

    if [[ ! -f "$path" ]]; then
        echo "Súbor neexistuje: $path" >&2 
        exit 1
    fi

    dir=$(dirname "$path")

    for file in "$dir"/*; do
        sed -i 's/^vutfit_default .*/vutfit_default n/' "$file"
    done
    # V cieľovom nastavíme na y
    sed -i 's/^vutfit_default .*/vutfit_default y/' "$path"
}


if [ $# -lt 1 ]; then
	echo "Niesu zadane ziadne parametre!" 1>&2
	exit 1
fi

# boot_entries_dir

boot_entry_directory="/boot/loader/entries"

if [[ "$1" == -b ]]; then
	if [[ ! -d "$2" ]]; then
		echo "cesta neexistuje" 1>&2
		exit 1
	fi
	boot_entry_directory="$2"
	shift 2
fi

# hlavne prorozdelenie

case "$1" in
    "list")
        shift 1
        list_entries $@
        ;;
    "remove")
        shift 1
        remove_entries $@
        ;;
    "duplicate")
        shift
        duplicate_entry $@
        ;;
    "show-default")
        shift 1
        show_default $@
        ;;
    "make-default")
        shift 1
        make_default $@
        ;;
    *)
        echo "Použitie neznámeho argumentu: $1"
        exit 1
        ;;
esac

exit 0;